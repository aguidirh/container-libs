/*
   Renovate is a service similar to GitHub Dependabot, but with
   (fantastically) more configuration options.  So many options
   in fact, if you're new I recommend glossing over this cheat-sheet
   prior to the official documentation:

   https://www.augmentedmind.de/2021/07/25/renovate-bot-cheat-sheet

   Configuration Update/Change Procedure:
     1. Make changes
     2. Manually validate changes (from repo-root):

        podman run -it \
            -v ./.github/renovate.json5:/usr/src/app/renovate.json5:z \
            docker.io/renovate/renovate:latest \
            renovate-config-validator
     3. Commit.

   Configuration Reference:
   https://docs.renovatebot.com/configuration-options/

   Monitoring Dashboard:
   https://app.renovatebot.com/dashboard#github/containers

   Note: The Renovate bot will create/manage it's business on
         branches named 'renovate/*'.  Otherwise, and by
         default, the only the copy of this file that matters
         is the one on the `main` branch.  No other branches
         will be monitored or touched in any way.
*/

{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",

  /*************************************************
   ****** Global/general configuration options *****
   *************************************************/

  // Re-use predefined sets of configuration options to DRY
  "extends": [
    // https://github.com/containers/automation/blob/main/renovate/defaults.json5
    "github>containers/automation//renovate/defaults.json5"
  ],

  /*************************************************
   *** Repository-specific configuration options ***
   *************************************************/

  // Don't leave dep. update. PRs "hanging", assign them to people.
  "assignees": ["containers/image-maintainers"],

  /*************************************************
   ***** Golang-specific configuration options *****
   *************************************************/

  "golang": {
    "commitMessageTopic": "module {{depName}}",

    // disabled by default, safe to enable since "tidy" enforced by CI.
    "postUpdateOptions": ["gomodTidy"],

    // N/B: LAST MATCHING RULE WINS
    // https://docs.renovatebot.com/configuration-options/#packagerules
    "packageRules": [
      // Workaround https://github.com/renovatebot/renovate/issues/16715
      // our own way.  Rec. workaround in issue seems to disable more than
      // only golang updates.
      {
        "matchDatasources": ["golang-version"],
        "enabled": false,
      },

      // Golang pseudo-version packages will spam with every Commit ID change.
      // Limit update frequency.
      {
        "matchUpdateTypes": ["digest"],
        "schedule": "every month",
      },

      // Workaround: rollbackPRs are not compatible with digest updates.
      // This rule must appear AFTER the "digest" rule.
      // Ref: https://github.com/renovatebot/renovate/discussions/18250
      {
        "matchLanguages": ["go"],

        // Open rollback PR if updated dep. is removed (i.e. tag pulled
        // due to major bug or security issue).
        "rollbackPrs": true,
      },
    ],
  },
}
